{"version":3,"sources":["scripts/main.js"],"names":["th","document","querySelectorAll","tr","j","count","addEventListener","e","copy","i","length","push","cloneNode","children","textContent","sort","a","b","parseInt","replace","localeCompare","replaceWith"],"mappings":";AAAA,aA2CC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtCD,IAHA,IAAIA,EAASC,EAAAA,SAASC,iBAAiB,aACnCC,EAASF,EAAAA,SAASC,iBAAiB,aAE9BE,EAAAA,SAAAA,GACHC,IAAAA,EAAQ,EAEZL,EAAGI,GAAGE,iBAAiB,QAAS,SAACC,GAG1B,IAFCC,IAAAA,EAAO,GAEJC,EAAI,EAAGA,EAAIN,EAAGO,OAAQD,IAC7BD,EAAKG,KAAKR,EAAGM,GAAGG,WAAU,IAGe,MAAvCJ,EAAK,GAAGK,SAAST,GAAGU,YAAY,GAC9BT,EAAQ,GAAM,EAChBG,EAAKO,KAAK,SAACC,EAAGC,GACZC,OAAAA,SAASF,EAAEH,SAAST,GAAGU,YAAYK,QAAQ,SAAU,IAClDD,SAASD,EAAEJ,SAAST,GAAGU,YAAYK,QAAQ,SAAU,QAE1DX,EAAKO,KAAK,SAACC,EAAGC,GACZC,OAAAA,SAASD,EAAEJ,SAAST,GAAGU,YAAYK,QAAQ,SAAU,IAClDD,SAASF,EAAEH,SAAST,GAAGU,YAAYK,QAAQ,SAAU,QAGxDd,EAAQ,GAAM,EAChBG,EAAKO,KAAK,SAACC,EAAGC,GACZD,OAAAA,EAAEH,SAAST,GAAGU,YAAYM,cAAcH,EAAEJ,SAAST,GAAGU,eAExDN,EAAKO,KAAK,SAACC,EAAGC,GACZA,OAAAA,EAAEJ,SAAST,GAAGU,YAAYM,cAAcJ,EAAEH,SAAST,GAAGU,eAIvD,IAAA,IAAIL,EAAI,EAAGA,EAAIN,EAAGO,OAAQD,IAC7BN,EAAGM,GAAGY,YAAYb,EAAKC,IAGzBT,EAASC,EAAAA,SAASC,iBAAiB,aACnCC,EAASF,EAAAA,SAASC,iBAAiB,aACnCG,OApCKD,EAAI,EAAGA,EAAIJ,EAAGU,OAAQN,IAAtBA,EAAAA","file":"main.d0b9d93d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nlet th = [...document.querySelectorAll('thead th')];\r\nlet tr = [...document.querySelectorAll('tbody tr')];\r\n\r\nfor (let j = 0; j < th.length; j++) {\r\n  let count = 0;\r\n\r\n  th[j].addEventListener('click', (e) => {\r\n    const copy = [];\r\n\r\n    for (let i = 0; i < tr.length; i++) {\r\n      copy.push(tr[i].cloneNode(true));\r\n    }\r\n\r\n    if (copy[0].children[j].textContent[0] === '$') {\r\n      if (count % 2 === 0) {\r\n        copy.sort((a, b) =>\r\n          parseInt(a.children[j].textContent.replace(/[^\\d]/g, '')\r\n          - (parseInt(b.children[j].textContent.replace(/[^\\d]/g, '')))));\r\n      } else {\r\n        copy.sort((a, b) =>\r\n          parseInt(b.children[j].textContent.replace(/[^\\d]/g, '')\r\n          - (parseInt(a.children[j].textContent.replace(/[^\\d]/g, '')))));\r\n      }\r\n    } else {\r\n      if (count % 2 === 0) {\r\n        copy.sort((a, b) =>\r\n          a.children[j].textContent.localeCompare(b.children[j].textContent));\r\n      } else {\r\n        copy.sort((a, b) =>\r\n          b.children[j].textContent.localeCompare(a.children[j].textContent));\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < tr.length; i++) {\r\n      tr[i].replaceWith(copy[i]);\r\n    }\r\n\r\n    th = [...document.querySelectorAll('thead th')];\r\n    tr = [...document.querySelectorAll('tbody tr')];\r\n    count++;\r\n  });\r\n}\r\n"]}